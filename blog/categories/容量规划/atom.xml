<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 容量规划 | timo Blog]]></title>
  <link href="http://timoyang.github.com/blog/categories/容量规划/atom.xml" rel="self"/>
  <link href="http://timoyang.github.com/"/>
  <updated>2013-04-09T22:33:07+08:00</updated>
  <id>http://timoyang.github.com/</id>
  <author>
    <name><![CDATA[timoyang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[web服务器扩容]]></title>
    <link href="http://timoyang.github.com/blog/2012/11/20/webfu-wu-qi-kuo-rong/"/>
    <updated>2012-11-20T23:55:00+08:00</updated>
    <id>http://timoyang.github.com/blog/2012/11/20/webfu-wu-qi-kuo-rong</id>
    <content type="html"><![CDATA[<p>  随着公司近期的各种推广活动，负责的业务访问量突增很多，为了100%支撑业务的需求，最近对前端web机器做了一次扩容，各种折腾，收获很多。:)</p>

<p>  对一台web服务器的扩容大致包括：</p>

<ul>
<li><p>基础环境的搭建</p></li>
<li><p>应用的部署</p></li>
<li><p>网络策略的申请及验证</p></li>
<li><p>依赖的相关权限的申请及验证</p></li>
</ul>


<p>  当面对数量很多的服务器的时候，自动化已经不是一个要不要做的问题，而是怎样做得更好的问题。比较传统的做法是通过运维编写相应的部署脚本，推送到目的机器上执行，达到基础环境的部署目的，当然也有很多开源的自动化管理工具（如puppet），能将这些重复的体力劳动大大精简。</p>

<p>  一个成熟的运维团队，对于知识的积淀应该做到例行化，通过wiki或者bolg的方式保留下来，不但能在下次遇到同样问题的时候，迅速找到答案，还可以帮助刚加入团队的新人更快地对系统有比较全面的了解。</p>

<p>  在验证网络策略的过程中，发现之前是通过抽检的方式，随机去检查访问策略是否实施完成，这种方法不但耗时，而且效果非常不理想。为了达到偷懒的目的，自己折腾了一个验证的脚本，感觉效果还不错。：P
  想方设法地通过工具去“偷懒”，总能使日常的工作多了几分乐趣。</p>

<p>  --EOF--</p>
]]></content>
  </entry>
  
</feed>
